// Qi-Rui Hong
// I pledge my honor that I have abided bu the Steven Honor System  
  
  1:    proc  0 (:init:) fmep_mc.pml:53 (state 1)       [i = 0]
  2:    proc  0 (:init:) fmep_mc.pml:53 (state 7)       [((i<=1))]
  3:    proc  0 (:init:) fmep_mc.pml:54 (state 3)       [flag[i] = 0]
  4:    proc  0 (:init:) fmep_mc.pml:53 (state 4)       [i = (i+1)]
  5:    proc  0 (:init:) fmep_mc.pml:53 (state 7)       [((i<=1))]
  6:    proc  0 (:init:) fmep_mc.pml:54 (state 3)       [flag[i] = 0]
  7:    proc  0 (:init:) fmep_mc.pml:53 (state 4)       [i = (i+1)]
  8:    proc  0 (:init:) fmep_mc.pml:53 (state 7)       [else]
  9:    proc  0 (:init:) fmep_mc.pml:58 (state 12)      [(run P(0))]
 10:    proc  0 (:init:) fmep_mc.pml:59 (state 11)      [(run Q(1))]
 11:    proc  2 (Q) fmep_mc.pml:30 (state 21)   [flag[me] = 1]
 12:    proc  2 (Q) fmep_mc.pml:32 (state 12)   [else]
 13:    proc  2 (Q) fmep_mc.pml:35 (state 8)    [((flag[(1-me)]==0))]
 14:    proc  2 (Q) fmep_mc.pml:38 (state 11)   [turn = me]
 15:    proc  2 (Q) fmep_mc.pml:32 (state 12)   [((turn==me))]
1 went in
 16:    proc  2 (Q) fmep_mc.pml:41 (state 15)   [printf('%d went in\n',me)]
 17:    proc  2 (Q) fmep_mc.pml:42 (state 16)   [c = (c+1)]
 18:    proc  2 (Q) fmep_mc.pml:43 (state 17)   [assert((c==1))]
 19:    proc  2 (Q) fmep_mc.pml:44 (state 18)   [c = (c-1)]
 20:    proc  2 (Q) fmep_mc.pml:46 (state 19)   [flag[me] = 0]
1 went out
 21:    proc  2 (Q) fmep_mc.pml:47 (state 20)   [printf('%d went out\n',me)]
 22:    proc  1 (P) fmep_mc.pml:7 (state 21)    [flag[me] = 1]
 23:    proc  2 (Q) fmep_mc.pml:30 (state 21)   [flag[me] = 1]
 24:    proc  2 (Q) fmep_mc.pml:32 (state 12)   [((turn==me))]
1 went in
 25:    proc  2 (Q) fmep_mc.pml:41 (state 15)   [printf('%d went in\n',me)]
 26:    proc  2 (Q) fmep_mc.pml:42 (state 16)   [c = (c+1)]
 27:    proc  2 (Q) fmep_mc.pml:43 (state 17)   [assert((c==1))]
 28:    proc  2 (Q) fmep_mc.pml:44 (state 18)   [c = (c-1)]
 29:    proc  2 (Q) fmep_mc.pml:46 (state 19)   [flag[me] = 0]
 30:    proc  1 (P) fmep_mc.pml:9 (state 12)    [else]
1 went out
 31:    proc  2 (Q) fmep_mc.pml:47 (state 20)   [printf('%d went out\n',me)]
 32:    proc  1 (P) fmep_mc.pml:12 (state 8)    [((flag[(1-me)]==0))]
 33:    proc  2 (Q) fmep_mc.pml:30 (state 21)   [flag[me] = 1]
 34:    proc  2 (Q) fmep_mc.pml:32 (state 12)   [((turn==me))]
1 went in
 35:    proc  2 (Q) fmep_mc.pml:41 (state 15)   [printf('%d went in\n',me)]
 36:    proc  2 (Q) fmep_mc.pml:42 (state 16)   [c = (c+1)]
 37:    proc  2 (Q) fmep_mc.pml:43 (state 17)   [assert((c==1))]
 38:    proc  1 (P) fmep_mc.pml:15 (state 11)   [turn = me]
 39:    proc  1 (P) fmep_mc.pml:9 (state 12)    [((turn==me))]
0 went in
 40:    proc  1 (P) fmep_mc.pml:18 (state 15)   [printf('%d went in\n',me)]
 41:    proc  1 (P) fmep_mc.pml:20 (state 16)   [c = (c+1)]
pan:1: assertion violated (c==1) (at depth 42)
spin: trail ends after 42 steps
#processes 3:
 42:    proc 0 (:init:)  fmep_mc.pml:61 (state 13)
                -end-
 42:    proc 1 (P)  fmep_mc.pml:21 (state 17) (invalid end state)
                assert((c==1))
 42:    proc 2 (Q)  fmep_mc.pml:44 (state 18) (invalid end state)
                c = (c-1)
global vars:
        byte   turn:    0
        bit    flag[0]: 1
        bit    flag[1]: 1
        byte   c:       2
local vars proc 0 (:init:):
        byte   i:       2
local vars proc 1 (P):
        byte   me:      0
local vars proc 2 (Q):
        byte   me:      1